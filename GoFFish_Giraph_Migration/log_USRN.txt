  Superstep ActivePartitions ActiveVM MigrationCost P_MAX V_MAX Total_TIME
1         1                1        1             0  4861  4861       4861

[1 rows x 7 columns]
{0: [7]}
===================Superstep2================
running Preference 1 : RUN FFD
preload partition 1 on vm 0
preload partition 6 on vm 1
**FFD solution satisfied the constraint**
===================Superstep3================
running Preference 1 : RUN FFD
preload partition 5 on vm 1
preload partition 3 on vm 0
preload partition 0 on vm 2
preload partition 4 on vm 3
**FFD solution satisfied the constraint**
===================Superstep4================
running Preference 1 : RUN FFD
preload partition 2 on vm 0
******************Preference 2: LOSS GAIN APPROACH by avoiding migration*************
partition_to_compute_score
[0, 4, 1, 3]
send_bottleneck_flag
0
partition_to_compute_score
[0, 4, 1, 3]
on not migrating partititon 0 we have to keep running vm 2
on not migrating partititon 4 we have to keep running vm 3
partition_score
{1: 584.3333333333334, 3: 832.3333333333334}
avoid migration for pid 3 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([1]), 1: set([]), 2: set([0]), 3: set([4])}
vm_receive_map
{0: set([]), 1: set([0, 1, 4]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[0, 4, 1]
send_bottleneck_flag
0
partition_to_compute_score
[0, 4, 1]
on not migrating partititon 0 we have to keep running vm 2
on not migrating partititon 4 we have to keep running vm 3
partition_score
{1: 584.3333333333334}
avoid migration for pid 1 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([0]), 3: set([4])}
vm_receive_map
{0: set([]), 1: set([0, 4]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[0, 4]
send_bottleneck_flag
0
partition_to_compute_score
[0, 4]
on not migrating partititon 0 we have to keep running vm 2
on not migrating partititon 4 we have to keep running vm 3
partition_score
{}
 number of bins in avoid_migration approach 2
 *********************** using Preference 3 VM++ superstep 4 *************************
UPPER_LIMIT
6116.85
maxTime,4531
number of machines to be used 3
partTime {0: 1584, 1: 249, 2: 4531, 3: 1, 4: 403, 5: 232, 6: 245}
{0: [3, 7, 1, 2], 1: [5, 6], 2: [0], 3: [4]}
bin_partition_map
{0: [4, 1, 6, 5, 3], 1: [0], 2: [2]}
bin_vm_map
{0: 1, 1: 2, 2: 0}
In VM++ approach trying the avoid migration approach with 3 vms and 7 partitions and already spawned 4 vms superstep4
PhysicalVM_Partition_Map
{0: [3, 7, 1, 2], 1: [5, 6], 2: [0], 3: [4]}
vm_computetimesum_map{0: 4531, 1: 1130, 2: 1584}
------------------------------------------------------------------------------------
partition_to_compute_score
[4, 1, 3]
send_bottleneck_flag
0
partition_to_compute_score
[4, 1, 3]
on not migrating partititon 4 we have to keep running vm 3
partition_score
{1: 584.3333333333334, 3: 832.3333333333334}
avoid migration for pid 3 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([1]), 1: set([]), 2: set([]), 3: set([4])}
vm_receive_map
{0: set([]), 1: set([1, 4]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 1666.6666666666667, 0.0, 833.3333333333334]
compute_cost_list [4532, 1129, 1584, 0]
------------------------------------------------------------------------------------
partition_to_compute_score
[4, 1]
send_bottleneck_flag
0
partition_to_compute_score
[4, 1]
on not migrating partititon 4 we have to keep running vm 3
partition_score
{1: 584.3333333333334}
avoid migration for pid 1 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([4])}
vm_receive_map
{0: set([]), 1: set([4]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 833.3333333333334, 0.0, 833.3333333333334]
compute_cost_list [4781, 880, 1584, 0]
===================Superstep5================
running Preference 1 : RUN FFD
******************Preference 2: LOSS GAIN APPROACH by avoiding migration*************
partition_to_compute_score
[2, 0, 7, 1]
send_bottleneck_flag
0
partition_to_compute_score
[2, 0, 7, 1]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{1: 831.3333333333334, 2: 816.3333333333334, 7: 830.3333333333334}
avoid migration for pid 1 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2, 7]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([0, 2, 7]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[2, 0, 7]
send_bottleneck_flag
0
partition_to_compute_score
[2, 0, 7]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{2: 816.3333333333334, 7: 830.3333333333334}
avoid migration for pid 7 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([0, 2]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[2, 0]
send_bottleneck_flag
0
partition_to_compute_score
[2, 0]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{2: 816.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([0]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
 the sender vm 2 is dissapearing and receiving is bottleneck
partition_score
{}
 number of bins in avoid_migration approach 2
 *********************** using Preference 3 VM++ superstep 5 *************************
UPPER_LIMIT
776.25
maxTime,575
number of machines to be used 3
partTime {0: 8, 1: 2, 2: 17, 3: 575, 4: 23, 5: 31, 6: 112, 7: 3}
{0: [7, 2, 2, 3, 1], 1: [4, 6, 5], 2: [0], 3: []}
bin_partition_map
{0: [5, 4, 2, 0, 7, 1], 1: [6], 2: [3]}
bin_vm_map
{0: 0, 1: 1, 2: 3}
In VM++ approach trying the avoid migration approach with 3 vms and 8 partitions and already spawned 4 vms superstep5
PhysicalVM_Partition_Map
{0: [7, 2, 2, 3, 1], 1: [4, 6, 5], 2: [0], 3: []}
vm_computetimesum_map{0: 84, 1: 112, 3: 575}
------------------------------------------------------------------------------------
partition_to_compute_score
[5, 4, 0]
send_bottleneck_flag
0
partition_to_compute_score
[5, 4, 0]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{4: 810.3333333333334, 5: 802.3333333333334}
avoid migration for pid 4 do not send it from vmid 1 to vmid 0
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([3]), 1: set([5]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([0, 5]), 1: set([]), 2: set([]), 3: set([3])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [1666.6666666666667, 833.3333333333334, 833.3333333333334, 833.3333333333334]
compute_cost_list [61, 135, 0, 575]
------------------------------------------------------------------------------------
partition_to_compute_score
[5, 0]
send_bottleneck_flag
0
partition_to_compute_score
[5, 0]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{5: 802.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 0
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([3]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([0]), 1: set([]), 2: set([]), 3: set([3])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 0.0, 833.3333333333334, 833.3333333333334]
compute_cost_list [30, 166, 0, 575]
------------------------------------------------------------------------------------
partition_to_compute_score
[3]
send_bottleneck_flag
1
partition_score
{3: 258.33333333333337}
avoid migration for pid 3 do not send it from vmid 0 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([0]), 1: set([]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 0.0, 833.3333333333334, 0.0]
compute_cost_list [605, 166, 0, 0]
------------------------------------------------------------------------------------
 the sender vm 2 is dissapearing and receiving is bottleneck
partition_score
{}
bottlneck_vmid
2
no partition scores computed
vm_send_map
{0: set([]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([0]), 1: set([]), 2: set([]), 3: set([])}
vm_computetimesum_map
{0: 605, 1: 166, 3: 0}
 number of bins in avoid_migration approach 3
number of machines to be used 4
partTime {0: 8, 1: 2, 2: 17, 3: 575, 4: 23, 5: 31, 6: 112, 7: 3}
{0: [7, 2, 2, 3, 1], 1: [4, 6, 5], 2: [0], 3: []}
bin_partition_map
{0: [4, 2, 1], 1: [5, 0, 7], 2: [6], 3: [3]}
bin_vm_map
{0: 0, 1: 2, 2: 1, 3: 3}
In VM++ approach trying the avoid migration approach with 4 vms and 8 partitions and already spawned 4 vms superstep5
PhysicalVM_Partition_Map
{0: [7, 2, 2, 3, 1], 1: [4, 6, 5], 2: [0], 3: []}
vm_computetimesum_map{0: 42, 1: 112, 2: 42, 3: 575}
------------------------------------------------------------------------------------
partition_to_compute_score
[3, 7]
send_bottleneck_flag
1
partition_score
{3: 258.33333333333337, 7: 830.3333333333334}
avoid migration for pid 7 do not send it from vmid 0 to vmid 2
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([3]), 1: set([4, 5]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([4]), 1: set([]), 2: set([5]), 3: set([3])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 1666.6666666666667, 833.3333333333334, 833.3333333333334]
compute_cost_list [45, 112, 39, 575]
------------------------------------------------------------------------------------
partition_to_compute_score
[4, 5]
send_bottleneck_flag
1
partition_score
{4: 810.3333333333334, 5: 802.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 2
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([3]), 1: set([4]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([4]), 1: set([]), 2: set([]), 3: set([3])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 0.0, 833.3333333333334]
compute_cost_list [45, 143, 8, 575]
------------------------------------------------------------------------------------
partition_to_compute_score
[3]
send_bottleneck_flag
1
partition_score
{3: 258.33333333333337}
avoid migration for pid 3 do not send it from vmid 0 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([4]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([4]), 1: set([]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 0.0, 0.0]
compute_cost_list [620, 143, 8, 0]
------------------------------------------------------------------------------------
partition_to_compute_score
[4]
send_bottleneck_flag
1
partition_score
{4: 810.3333333333334}
avoid migration for pid 4 do not send it from vmid 1 to vmid 0
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 0.0, 0.0, 0.0]
compute_cost_list [597, 166, 8, 0]
===================Superstep6================
running Preference 1 : RUN FFD
******************Preference 2: LOSS GAIN APPROACH by avoiding migration*************
partition_to_compute_score
[1, 0, 3]
send_bottleneck_flag
0
partition_to_compute_score
[1, 0, 3]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{1: 823.3333333333334, 3: 832.3333333333334}
avoid migration for pid 3 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([1]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([0, 1]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[1, 0]
send_bottleneck_flag
0
partition_to_compute_score
[1, 0]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{1: 823.3333333333334}
avoid migration for pid 1 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([0]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
 the sender vm 2 is dissapearing and receiving is bottleneck
partition_score
{}
 number of bins in avoid_migration approach 2
 *********************** using Preference 3 VM++ superstep 6 *************************
UPPER_LIMIT
102.6
maxTime,76
number of machines to be used 3
partTime {0: 5, 1: 10, 2: 76, 3: 1, 4: 23, 5: 5, 6: 9}
{0: [2, 2, 1, 7, 3], 1: [6, 5, 4], 2: [0], 3: []}
bin_partition_map
{0: [1, 6, 0, 3], 1: [4, 5], 2: [2]}
bin_vm_map
{0: 0, 1: 1, 2: 3}
In VM++ approach trying the avoid migration approach with 3 vms and 7 partitions and already spawned 4 vms superstep6
PhysicalVM_Partition_Map
{0: [2, 2, 1, 7, 3], 1: [6, 5, 4], 2: [0], 3: []}
vm_computetimesum_map{0: 25, 1: 28, 3: 76}
------------------------------------------------------------------------------------
partition_to_compute_score
[6, 0]
send_bottleneck_flag
0
partition_to_compute_score
[6, 0]
on not migrating partititon 0 we have to keep running vm 2
partition_score
{6: 824.3333333333334}
avoid migration for pid 6 do not send it from vmid 1 to vmid 0
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([0]), 1: set([]), 2: set([]), 3: set([2])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 0.0, 833.3333333333334, 833.3333333333334]
compute_cost_list [16, 37, 0, 76]
------------------------------------------------------------------------------------
partition_to_compute_score
[2]
send_bottleneck_flag
1
partition_score
{2: 757.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([0]), 1: set([]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 0.0, 833.3333333333334, 0.0]
compute_cost_list [92, 37, 0, 0]
------------------------------------------------------------------------------------
 the sender vm 2 is dissapearing and receiving is bottleneck
partition_score
{}
bottlneck_vmid
2
no partition scores computed
vm_send_map
{0: set([]), 1: set([]), 2: set([0]), 3: set([])}
vm_receive_map
{0: set([0]), 1: set([]), 2: set([]), 3: set([])}
vm_computetimesum_map
{0: 92, 1: 37, 3: 0}
 number of bins in avoid_migration approach 3
number of machines to be used 4
partTime {0: 5, 1: 10, 2: 76, 3: 1, 4: 23, 5: 5, 6: 9}
{0: [2, 2, 1, 7, 3], 1: [6, 5, 4], 2: [0], 3: []}
bin_partition_map
{0: [6, 0, 3], 1: [1, 5], 2: [4], 3: [2]}
bin_vm_map
{0: 2, 1: 0, 2: 1, 3: 3}
In VM++ approach trying the avoid migration approach with 4 vms and 7 partitions and already spawned 4 vms superstep6
PhysicalVM_Partition_Map
{0: [2, 2, 1, 7, 3], 1: [6, 5, 4], 2: [0], 3: []}
vm_computetimesum_map{0: 15, 1: 23, 2: 15, 3: 76}
------------------------------------------------------------------------------------
partition_to_compute_score
[2, 3]
send_bottleneck_flag
1
partition_score
{2: 757.3333333333334, 3: 832.3333333333334}
avoid migration for pid 3 do not send it from vmid 0 to vmid 2
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([5, 6]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([5]), 1: set([]), 2: set([6]), 3: set([2])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 1666.6666666666667, 833.3333333333334, 833.3333333333334]
compute_cost_list [16, 23, 14, 76]
------------------------------------------------------------------------------------
partition_to_compute_score
[5, 6]
send_bottleneck_flag
1
partition_score
{5: 828.3333333333334, 6: 824.3333333333334}
avoid migration for pid 6 do not send it from vmid 1 to vmid 2
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([5]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([5]), 1: set([]), 2: set([]), 3: set([2])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 0.0, 833.3333333333334]
compute_cost_list [16, 32, 5, 76]
------------------------------------------------------------------------------------
partition_to_compute_score
[2]
send_bottleneck_flag
1
partition_score
{2: 757.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([5]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([5]), 1: set([]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 0.0, 0.0]
compute_cost_list [92, 32, 5, 0]
------------------------------------------------------------------------------------
partition_to_compute_score
[5]
send_bottleneck_flag
1
partition_score
{5: 828.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 0
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 0.0, 0.0, 0.0]
compute_cost_list [87, 37, 5, 0]
inside run approach
vm_send_map {0: set([]), 1: set([]), 2: set([]), 3: set([])}
===================Superstep7================
running Preference 1 : RUN FFD
******************Preference 2: LOSS GAIN APPROACH by avoiding migration*************
partition_to_compute_score
[2, 3]
send_bottleneck_flag
1
partition_score
{2: 830.3333333333334, 3: 831.3333333333334}
avoid migration for pid 3 do not send it from vmid 0 to vmid 2
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([4, 5]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([5]), 1: set([2]), 2: set([]), 3: set([4])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[4, 5]
send_bottleneck_flag
1
partition_score
{4: 831.3333333333334, 5: 829.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 0
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([4]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([2]), 2: set([]), 3: set([4])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[2]
send_bottleneck_flag
1
partition_score
{2: 830.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 1
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([4]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([4])}
-----------call end avoid_migration_for_partition()------------
partition_to_compute_score
[4]
send_bottleneck_flag
1
partition_score
{4: 831.3333333333334}
avoid migration for pid 4 do not send it from vmid 1 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([])}
-----------call end avoid_migration_for_partition()------------
 the sender vm -1 is dissapearing and receiving is bottleneck
partition_score
{}
 number of bins in avoid_migration approach 4
 *********************** using Preference 3 VM++ superstep 7 *************************
UPPER_LIMIT
5.4
maxTime,4
number of machines to be used 5
partTime {0: 2, 1: 0, 2: 3, 3: 2, 4: 2, 5: 4, 6: 1}
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: []}
bin_partition_map
{0: [0, 1], 1: [3], 2: [4, 6], 3: [2], 4: [5]}
bin_vm_map
{0: 2, 1: 0, 2: 1, 3: 3, 4: 4}
In VM++ approach trying the avoid migration approach with 5 vms and 7 partitions and already spawned 5 vms superstep7
PhysicalVM_Partition_Map
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: []}
vm_computetimesum_map{0: 2, 1: 3, 2: 2, 3: 3, 4: 4}
------------------------------------------------------------------------------------
partition_to_compute_score
[1, 2]
send_bottleneck_flag
1
partition_score
{1: 833.3333333333334, 2: 830.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([1]), 1: set([5]), 2: set([]), 3: set([]), 4: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([1]), 3: set([]), 4: set([5])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 833.3333333333334, 0.0, 833.3333333333334]
compute_cost_list [5, 3, 2, 0, 4]
------------------------------------------------------------------------------------
partition_to_compute_score
[1]
send_bottleneck_flag
1
partition_score
{1: 833.3333333333334}
avoid migration for pid 1 do not send it from vmid 0 to vmid 2
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([5]), 2: set([]), 3: set([]), 4: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([5])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 833.3333333333334, 0.0, 0.0, 833.3333333333334]
compute_cost_list [5, 3, 2, 0, 4]
------------------------------------------------------------------------------------
partition_to_compute_score
[5]
send_bottleneck_flag
1
partition_score
{5: 829.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 4
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 0.0, 0.0, 0.0, 0.0]
compute_cost_list [5, 7, 2, 0, 0]
------------------------------------------------------------------------------------
 the sender vm -1 is dissapearing and receiving is bottleneck
partition_score
{}
bottlneck_vmid
-1
no partition scores computed
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([])}
vm_computetimesum_map
{0: 5, 1: 7, 2: 2, 3: 0, 4: 0}
 number of bins in avoid_migration approach 5
number of machines to be used 6
partTime {0: 2, 1: 0, 2: 3, 3: 2, 4: 2, 5: 4, 6: 1}
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: [], 5: []}
bin_partition_map
{0: [6, 1], 1: [0], 2: [3], 3: [4], 4: [2], 5: [5]}
bin_vm_map
{0: 4, 1: 2, 2: 0, 3: 1, 4: 3, 5: 5}
In VM++ approach trying the avoid migration approach with 6 vms and 7 partitions and already spawned 6 vms superstep7
PhysicalVM_Partition_Map
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: [], 5: []}
vm_computetimesum_map{0: 2, 1: 2, 2: 2, 3: 3, 4: 1, 5: 4}
------------------------------------------------------------------------------------
partition_to_compute_score
[1, 2]
send_bottleneck_flag
1
partition_score
{1: 833.3333333333334, 2: 830.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([1]), 1: set([5, 6]), 2: set([]), 3: set([]), 4: set([]), 5: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([1, 6]), 5: set([5])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 1666.6666666666667, 0.0, 0.0, 1666.6666666666667, 833.3333333333334]
compute_cost_list [5, 2, 2, 0, 1, 4]
------------------------------------------------------------------------------------
partition_to_compute_score
[5, 6]
send_bottleneck_flag
1
partition_score
{5: 829.3333333333334, 6: 832.3333333333334}
avoid migration for pid 6 do not send it from vmid 1 to vmid 4
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([1]), 1: set([5]), 2: set([]), 3: set([]), 4: set([]), 5: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([1]), 5: set([5])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 0.0, 0.0, 833.3333333333334, 833.3333333333334]
compute_cost_list [5, 3, 2, 0, 0, 4]
------------------------------------------------------------------------------------
partition_to_compute_score
[1]
send_bottleneck_flag
1
partition_score
{1: 833.3333333333334}
avoid migration for pid 1 do not send it from vmid 0 to vmid 4
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([5]), 2: set([]), 3: set([]), 4: set([]), 5: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([5])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 833.3333333333334, 0.0, 0.0, 0.0, 833.3333333333334]
compute_cost_list [5, 3, 2, 0, 0, 4]
------------------------------------------------------------------------------------
partition_to_compute_score
[5]
send_bottleneck_flag
1
partition_score
{5: 829.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 5
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
compute_cost_list [5, 7, 2, 0, 0, 0]
------------------------------------------------------------------------------------
 the sender vm -1 is dissapearing and receiving is bottleneck
partition_score
{}
bottlneck_vmid
-1
no partition scores computed
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([])}
vm_computetimesum_map
{0: 5, 1: 7, 2: 2, 3: 0, 4: 0, 5: 0}
 number of bins in avoid_migration approach 6
number of machines to be used 7
partTime {0: 2, 1: 0, 2: 3, 3: 2, 4: 2, 5: 4, 6: 1}
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: [], 5: [], 6: []}
bin_partition_map
{0: [1], 1: [6], 2: [0], 3: [3], 4: [4], 5: [2], 6: [5]}
bin_vm_map
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6}
In VM++ approach trying the avoid migration approach with 7 vms and 7 partitions and already spawned 7 vms superstep7
PhysicalVM_Partition_Map
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: [], 5: [], 6: []}
vm_computetimesum_map{0: 0, 1: 1, 2: 2, 3: 2, 4: 2, 5: 3, 6: 4}
------------------------------------------------------------------------------------
partition_to_compute_score
[2, 3]
send_bottleneck_flag
1
partition_score
{2: 830.3333333333334, 3: 831.3333333333334}
avoid migration for pid 3 do not send it from vmid 0 to vmid 3
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([4, 5]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([4]), 5: set([2]), 6: set([5])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 1666.6666666666667, 0.0, 0.0, 833.3333333333334, 833.3333333333334, 833.3333333333334]
compute_cost_list [2, 1, 2, 0, 2, 3, 4]
------------------------------------------------------------------------------------
partition_to_compute_score
[4, 5]
send_bottleneck_flag
1
partition_score
{4: 831.3333333333334, 5: 829.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 6
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([4]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([4]), 5: set([2]), 6: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 0.0, 0.0, 833.3333333333334, 833.3333333333334, 0.0]
compute_cost_list [2, 5, 2, 0, 2, 3, 0]
------------------------------------------------------------------------------------
partition_to_compute_score
[2]
send_bottleneck_flag
1
partition_score
{2: 830.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 5
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([4]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([4]), 5: set([]), 6: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 833.3333333333334, 0.0, 0.0, 833.3333333333334, 0.0, 0.0]
compute_cost_list [5, 5, 2, 0, 2, 0, 0]
------------------------------------------------------------------------------------
partition_to_compute_score
[4]
send_bottleneck_flag
1
partition_score
{4: 831.3333333333334}
avoid migration for pid 4 do not send it from vmid 1 to vmid 4
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
compute_cost_list [5, 7, 2, 0, 0, 0, 0]
------------------------------------------------------------------------------------
 the sender vm -1 is dissapearing and receiving is bottleneck
partition_score
{}
bottlneck_vmid
-1
no partition scores computed
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([])}
vm_computetimesum_map
{0: 5, 1: 7, 2: 2, 3: 0, 4: 0, 5: 0, 6: 0}
 number of bins in avoid_migration approach 7
number of machines to be used 8
partTime {0: 2, 1: 0, 2: 3, 3: 2, 4: 2, 5: 4, 6: 1}
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: [], 5: [], 6: [], 7: []}
bin_partition_map
{0: [1], 1: [], 2: [6], 3: [0], 4: [3], 5: [4], 6: [2], 7: [5]}
bin_vm_map
{0: 0, 1: 3, 2: 1, 3: 2, 4: 4, 5: 5, 6: 6, 7: 7}
In VM++ approach trying the avoid migration approach with 8 vms and 7 partitions and already spawned 8 vms superstep7
PhysicalVM_Partition_Map
{0: [2, 7, 1, 3, 2], 1: [4, 6, 5], 2: [0], 3: [], 4: [], 5: [], 6: [], 7: []}
vm_computetimesum_map{0: 0, 1: 1, 2: 2, 4: 2, 5: 2, 6: 3, 7: 4}
------------------------------------------------------------------------------------
partition_to_compute_score
[2, 3]
send_bottleneck_flag
1
partition_score
{2: 830.3333333333334, 3: 831.3333333333334}
avoid migration for pid 3 do not send it from vmid 0 to vmid 4
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([4, 5]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([]), 7: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([4]), 6: set([2]), 7: set([5])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 1666.6666666666667, 0.0, 0.0, 0.0, 833.3333333333334, 833.3333333333334, 833.3333333333334]
compute_cost_list [2, 1, 2, 0, 0, 2, 3, 4]
------------------------------------------------------------------------------------
partition_to_compute_score
[4, 5]
send_bottleneck_flag
1
partition_score
{4: 831.3333333333334, 5: 829.3333333333334}
avoid migration for pid 5 do not send it from vmid 1 to vmid 7
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([2]), 1: set([4]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([]), 7: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([4]), 6: set([2]), 7: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [833.3333333333334, 833.3333333333334, 0.0, 0.0, 0.0, 833.3333333333334, 833.3333333333334, 0.0]
compute_cost_list [2, 5, 2, 0, 0, 2, 3, 0]
------------------------------------------------------------------------------------
partition_to_compute_score
[2]
send_bottleneck_flag
1
partition_score
{2: 830.3333333333334}
avoid migration for pid 2 do not send it from vmid 0 to vmid 6
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([4]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([]), 7: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([4]), 6: set([]), 7: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 833.3333333333334, 0.0, 0.0, 0.0, 833.3333333333334, 0.0, 0.0]
compute_cost_list [5, 5, 2, 0, 0, 2, 0, 0]
------------------------------------------------------------------------------------
partition_to_compute_score
[4]
send_bottleneck_flag
1
partition_score
{4: 831.3333333333334}
avoid migration for pid 4 do not send it from vmid 1 to vmid 5
-----------inside avoid_migration_for_partition()------------
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([]), 7: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([]), 7: set([])}
-----------call end avoid_migration_for_partition()------------
network_cost_list [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
compute_cost_list [5, 7, 2, 0, 0, 0, 0, 0]
------------------------------------------------------------------------------------
 the sender vm -1 is dissapearing and receiving is bottleneck
partition_score
{}
bottlneck_vmid
-1
no partition scores computed
vm_send_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([]), 7: set([])}
vm_receive_map
{0: set([]), 1: set([]), 2: set([]), 3: set([]), 4: set([]), 5: set([]), 6: set([]), 7: set([])}
vm_computetimesum_map
{0: 5, 1: 7, 2: 2, 4: 0, 5: 0, 6: 0, 7: 0}
 number of bins in avoid_migration approach 8
in vm++ approach number of VMs passed 40
